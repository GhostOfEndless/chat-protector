#file: noinspection SpringBootApplicationYaml
server:
  port: ${PROCESSOR_APP_PORT:8082}

management:
  endpoints:
    web:
      exposure:
        include: [ "prometheus", "health" ]
  prometheus:
    metrics:
      export:
        enabled: true

telegram:
  token: ${TELEGRAM_BOT_TOKEN}

kafka:
  updates-topic: ${KAFKA_UPDATES_TOPIC_NAME:updates-queue}

spring:
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:postgres}
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9094}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "org.telegram.telegrambots.meta.api.objects"

redis:
  master:
    host: ${REDIS_MASTER_HOST:localhost}
    port: 6379
  slaves:
    - host: ${REDIS_SLAVE_1_HOST:localhost}
      port: 7000
    - host: ${REDIS_SLAVE_2_HOST:localhost}
      port: 7001
  chat-configs-db: 0
  users-state-db: 1

logging:
  level:
    ru.tbank.processor: debug
    org.apache.kafka: warn
    org.jooq: warn