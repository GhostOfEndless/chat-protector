# noinspection ComposeUnknownKeys
include:
  - compose-environment.yml

services:
  admin-service:
    build:
      context: .
      dockerfile: admin-service/Dockerfile
    container_name: admin-service
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${ADMIN_MODULE_HTTP_PORT}:8080"
    environment:
      ADMIN_PANEL_JWT_SECRET: $ADMIN_MODULE_JWT_SECRET
      POSTGRES_CONTAINER_NAME: $POSTGRES_CONTAINER_NAME
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      REDIS_CONTAINER_NAME: $REDIS_CONTAINER_NAME
    depends_on:
      db:
        condition: service_healthy

  update-receiver:
    build:
      context: .
      dockerfile: update-receiver/Dockerfile
    container_name: update-receiver
    restart: unless-stopped
    env_file:
      - .env
    environment:
      KAFKA_UPDATES_TOPIC_NAME: $KAFKA_UPDATES_TOPIC_NAME
      TELEGRAM_BOT_TOKEN: $TELEGRAM_BOT_TOKEN
      KAFKA_CONTAINER_NAME: $KAFKA_CONTAINER_NAME
    depends_on:
      db:
        condition: service_healthy
      init-kafka:
        condition: service_completed_successfully

  update-processor:
    build:
      context: .
      dockerfile: update-processor/Dockerfile
    container_name: update-processor
    restart: unless-stopped
    env_file:
      - .env
    environment:
      KAFKA_UPDATES_TOPIC_NAME: $KAFKA_UPDATES_TOPIC_NAME
      TELEGRAM_BOT_TOKEN: $TELEGRAM_BOT_TOKEN
      REDIS_CONTAINER_NAME: $REDIS_CONTAINER_NAME
      KAFKA_CONTAINER_NAME: $KAFKA_CONTAINER_NAME
    depends_on:
      db:
        condition: service_healthy
      init-kafka:
        condition: service_completed_successfully
