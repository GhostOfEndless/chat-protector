include:
  - compose-environment.yml
  - compose-frontend.yml

services:
  admin-service:
    image: ghcr.io/ghostofendless/admin-service:latest
    container_name: admin-service
    hostname: admin-service
    networks:
      - app-tier
    restart: unless-stopped
    env_file: .env
    ports:
      - '8080:8080'
    environment:
      ADMIN_PANEL_JWT_SECRET: $ADMIN_SERVICE_JWT_SECRET
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_HOST: postgres
      REDIS_MASTER_HOST: redis-master
      REDIS_SLAVE_1_HOST: redis-slave-1
      REDIS_SLAVE_2_HOST: redis-slave-2
    depends_on:
      liquibase:
        condition: service_completed_successfully
      redis-master:
        condition: service_healthy

  update-receiver:
    image: ghcr.io/ghostofendless/update-receiver:latest
    container_name: update-receiver
    ports:
      - '8081:8081'
    networks:
      - app-tier
    restart: unless-stopped
    env_file: .env
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: $RABBITMQ_USER
      RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD
      RABBIT_UPDATES_TOPIC_NAME: $RABBIT_UPDATES_TOPIC_NAME
      TELEGRAM_BOT_TOKEN: $TELEGRAM_BOT_TOKEN
    volumes:
      - ../../logback:/opt/app/logback
    depends_on:
      liquibase:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy

  update-processor:
    image: ghcr.io/ghostofendless/update-processor:latest
    container_name: update-processor
    ports:
      - '8082:8082'
    networks:
      - app-tier
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_HOST: postgres
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: $RABBITMQ_USER
      RABBITMQ_PASSWORD: $RABBITMQ_PASSWORD
      RABBIT_UPDATES_TOPIC_NAME: $RABBIT_UPDATES_TOPIC_NAME
      TELEGRAM_BOT_TOKEN: $TELEGRAM_BOT_TOKEN
      OWNER_ACCOUNT_ID: $TELEGRAM_OWNER_ACCOUNT_ID
      REDIS_MASTER_HOST: redis-master
      REDIS_SLAVE_1_HOST: redis-slave-1
      REDIS_SLAVE_2_HOST: redis-slave-2
    volumes:
      - ../../logback:/opt/app/logback
    depends_on:
      liquibase:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
      redis-master:
        condition: service_healthy
