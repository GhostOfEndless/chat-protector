plugins {
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springframework.boot' version '3.3.11'
    id 'checkstyle'
    id 'jacoco'
    id 'java'
}

group = 'ru.tbank'
version = '1.0-SNAPSHOT'

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    version = '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    checkstyle {
        checkstyleMain.exclude '**/generated/**'
        configFile = file("${rootDir}/checkstyle/google_checks.xml")
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    bootJar {
        layered {
            true
        }
    }

    jacocoTestReport {
        reports {
            xml.required = true
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }

    dependencies {
        // spring starters
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        // other libs
        implementation 'org.jspecify:jspecify:1.0.0'
        compileOnly 'org.projectlombok:lombok:1.18.38'
        annotationProcessor 'org.projectlombok:lombok:1.18.38'
        testCompileOnly 'org.projectlombok:lombok:1.18.38'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'

        // metrics and logging
        implementation 'io.micrometer:micrometer-registry-prometheus:1.15.0'
        implementation 'net.logstash.logback:logstash-logback-encoder:8.1'

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-testcontainers'
        testImplementation 'org.testcontainers:junit-jupiter:1.21.0'
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
        jvmArgs '-XX:+EnableDynamicAgentLoading'
        maxParallelForks = 1
    }

    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
    }
}